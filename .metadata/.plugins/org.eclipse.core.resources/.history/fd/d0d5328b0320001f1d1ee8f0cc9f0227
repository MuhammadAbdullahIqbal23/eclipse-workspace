package abdullah.springboot.entity;

import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.EnumType;
import jakarta.persistence.Enumerated;
import jakarta.persistence.Column;

@Entity
public class Case {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;
    
    @Column(nullable = false)
    private String description;

    private String keySuspects;

    private String evidenceCollected;

    @Enumerated(EnumType.STRING)
    @Column(nullable = false)
    private CaseType type;

    public Case() {
        super();
    }

    public Case(Long id, String description, String keySuspects, String evidenceCollected, CaseType type) {
        super();
        this.id = id;
        this.description = description;
        this.keySuspects = keySuspects;
        this.evidenceCollected = evidenceCollected;
        this.type = type;
    }

    // Getters and Setters
    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public String getKeySuspects() {
        return keySuspects;
    }

    public void setKeySuspects(String keySuspects) {
        this.keySuspects = keySuspects;
    }

    public String getEvidenceCollected() {
        return evidenceCollected;
    }

    public void setEvidenceCollected(String evidenceCollected) {
        this.evidenceCollected = evidenceCollected;
    }

    public CaseType getType() {
        return type;
    }

    public void setType(CaseType type) {
        this.type = type;
    }

    @Override
    public String toString() {
        return String.format("Case [id=%s, description=%s, keySuspects=%s, evidenceCollected=%s, type=%s]", id, description, keySuspects, evidenceCollected, type);
    }
}

enum CaseType {
    HOMICIDE, THEFT, FRAUD, MISSING_PERSONS, ESPIONAGE
}
